#
# wm independent hotkeys
#

# lock screen
super + shift + x
  ~/.scripts/lock_actual.sh
super + x
  pyxtrlock

# terminal emulator
super + Return
	urxvt -si -sw -sk

# program launcher
super + d
	rofi -show drun

# program launcher
super + g
  ~/.scripts/johnnygoto.sh

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd

# monitor layout
{super + p,XF86Display}
  ~/.scripts/monitor_layout.sh

# password manager
alt + b
  bwmenu --auto-lock -1

# calculator
alt + c
  rofi -show calc -modi calc -no-show-match -no-sort -calc-command "echo '{result}' | xclip -sel clip"

# library
alt + l
  ~/.scripts/calibre.sh

# adjust audio volume
XF86Audio{Raise,Lower}Volume{_, + alt}
  pactl set-sink-volume alsa_output.pci-0000_00_1f.3.analog-stereo {+,-}{5,10}%

# mute audio input/output
XF86Audio{_,Mic}Mute
  {a="sink"; b="output";, a="source"; b="input";} \ 
  pactl set-${a}-mute alsa_${b}.pci-0000_00_1f.3.analog-stereo toggle
super + shift + Scroll_Lock
  pactl set-source-mute alsa_input.pci-0000_00_1f.3.analog-stereo toggle
{_,super} + @Scroll_Lock
  pactl set-source-mute alsa_input.pci-0000_00_1f.3.analog-stereo 1
super + Scroll_Lock
  pactl set-source-mute alsa_input.pci-0000_00_1f.3.analog-stereo 0

# media player controls
XF86Audio{Play,Pause,Prev,Next}
  playerctl {play,pause,previous,next}

# adjust brightness
XF86MonBrightness{Up,Down}{ + shift,_, + alt}
  light -{A,U} {0.5,2,5}
super + shift + ctrl + alt + b + {u,d}
  light -{A,U} 5

# screenshot
{super + shift + s,Print}
  ~/.scripts/screenshot.sh{_,_}

# clear clipboard formatting
ctrl + shift + v
  xclip -o -sel clip | xclip -sel clip && sleep 0.1 && xdotool key Ctrl+v

# capitalize
# ctrl + alt + v
#   sleep 0.2 && xdotool key Ctrl+a && sleep 0.2 && xdotool key Ctrl+c && sleep 0.2 && xclip -o -sel clip | tr a-z A-Z | xclip -sel clip && sleep 0.1 && xdotool key Ctrl+v

# close notification
# ctrl + space
  # dunstctl close

# close all notifications
ctrl + shift + space
  dunstctl close-all

# pop last notification
ctrl + grave
  dunstctl history-pop

# pop last notification
ctrl + shift + grave
  dunstctl context

#
# bspwm hotkeys
#

# quit/restart bspwm
super + shift + {e,r}
	{~/.scripts/logout.sh,bspc wm -r}

# close and kill
super + shift + {_,ctrl + }q
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

super + ctrl + s
	bspc node -g sticky

# toggle node flags
# super + ctrl + {m,x,y,z,o}
# 	bspc node -g {marked,locked,sticky,private,hidden}

# restore from scratch
super + ctrl + shift + o
  bspc query -N -n .hidden || exit; \
  n=$(bspc query -N -n .hidden | head -n 1); \
  d=$(bspc query -N -n .focused); \
	bspc node $n -g hidden; \
  bspc node $n -n $d; \
  bspc node $n -f

#
# focus/swap
#

# focus the node in the given direction
super + {h,j,k,l}{_, + shift}
  d="{west,south,north,east}"; \
  f() \{ bspc node -f $d || bspc monitor -f $d; \}; \
  s() \{ bspc node -s $d --follow || bspc node -m $d --follow; \}; \
  {f,s}
super + {Left,Down,Up,Right}{_, + shift}
  d="{west,south,north,east}"; \
  f() \{ bspc node -f $d || bspc monitor -f $d; \}; \
  s() \{ bspc node -s $d --follow || bspc node -m $d --follow; \}; \
  {f,s}

# focus the node for the given path jump
super + ctrl + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# rotate leaves of the tree
super + {period,comma}
	bspc node @parent -R {90,270}

# focus the next/previous node in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus a temporary desktop
super + {_,shift + }z
  bspc monitor -a 11; \
  n=$(bspc query -D -m | wc -l); \
  d=$(bspc query -M -m):^${n}; \
  {bspc desktop -f $d,bspc node -d $d}


# focus or send to the given desktop
super + {1-9,0}{_, + shift}
  desk={1-9,10}; \
  bspc query -D -d $desk || {bspc monitor -a $desk; ~/.scripts/sort_desktops.sh}; \
  bspc {desktop -f,node -d} $desk

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

#
# monitors
#

# move to desktop to monitor
super + ctrl + shift + {h,j,k,l}
  desk=$(bspc query -D -d); \
  mon=$(bspc query -M -m); \
  bspc query -D -d last.local || bspc monitor -a 11; \
  bspc desktop $desk -m {west,south,north,east} --follow; \
  bspc desktop $desk -f; \
  ~/.scripts/sort_desktops.sh

super + ctrl + c
  bspc query -N -n > /tmp/bspwmdtop_swap

super + ctrl + v
  [ -f /tmp/bspwmdtop_swap ] || exit; \
  bspc node $(cat /tmp/bspwmdtop_swap) -n $(bspc query -N -n); \
  bspc node $(cat /tmp/bspwmdtop_swap) -f
